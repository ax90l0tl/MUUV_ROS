[01m[K/home/isopodin-time/ros2_ws/src/muuv_ros/src/muuv_ros/thrusters.cpp:[m[K In constructor â€˜[01m[KThrusters::Thrusters()[m[Kâ€™:
[01m[K/home/isopodin-time/ros2_ws/src/muuv_ros/src/muuv_ros/thrusters.cpp:16:56:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Krclcpp::Node::get_parameter(const string&) const(std::__cxx11::basic_string<char>(((const char*)"motor_0"), std::allocator<char>())).rclcpp::Parameter::as_int()[m[Kâ€™ from â€˜[01m[Kint64_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   16 |   int motor[3] = {[01;35m[Kthis->get_parameter("motor_0").as_int()[m[K,
      |                   [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[01m[K/home/isopodin-time/ros2_ws/src/muuv_ros/src/muuv_ros/thrusters.cpp:17:56:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Krclcpp::Node::get_parameter(const string&) const(std::__cxx11::basic_string<char>(((const char*)"motor_1"), std::allocator<char>())).rclcpp::Parameter::as_int()[m[Kâ€™ from â€˜[01m[Kint64_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   17 |                   [01;35m[Kthis->get_parameter("motor_1").as_int()[m[K,
      |                   [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
[01m[K/home/isopodin-time/ros2_ws/src/muuv_ros/src/muuv_ros/thrusters.cpp:18:56:[m[K [01;35m[Kwarning: [m[Knarrowing conversion of â€˜[01m[Krclcpp::Node::get_parameter(const string&) const(std::__cxx11::basic_string<char>(((const char*)"motor_2"), std::allocator<char>())).rclcpp::Parameter::as_int()[m[Kâ€™ from â€˜[01m[Kint64_t[m[Kâ€™ {aka â€˜[01m[Klong int[m[Kâ€™} to â€˜[01m[Kint[m[Kâ€™ [[01;35m[K-Wnarrowing[m[K]
   18 |                   [01;35m[Kthis->get_parameter("motor_2").as_int()[m[K};
      |                   [01;35m[K~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~[m[K
